# Deploys to research-catalog-production
name: deploy production

on:
  push:
    branches:
      - production

permissions:
  id-token: write
  contents: read

env:
  AWS_DEFAULT_REGION: us-east-1
  LOCAL_TAG_NAME: research-catalog:${{ github.ref_name }}-${{ github.run_number }}
  APP_ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::946183545209:role/GithubActionsDeployerRole
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to Amazon ECR
        env:
          ECR_URL: 946183545209.dkr.ecr.us-east-1.amazonaws.com/research-catalog:$APP_ENV-latest
          MANIFEST: $(aws ecr batch-get-image --repository-name research-catalog --image-ids imageTag="$APP_ENV-latest" --output json | jq --raw-output --join-output '.images[0].imageManifest')
        run: |
          docker build --build-arg NEXT_PUBLIC_APP_ENV=$APP_ENV --tag $LOCAL_TAG_NAME .
          docker tag $LOCAL_TAG_NAME $ECR_URL
          aws ecr batch-delete-image --repository-name research-catalog --image-ids imageTag="$APP_ENV-previous" || true
          aws ecr put-image --repository-name research-catalog --image-tag "$APP_ENV-previous" --image-manifest "$MANIFEST" || true
          docker push $ECR_URL

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster research-catalog-$APP_ENV --service research-catalog-$APP_ENV --force-new-deployment
